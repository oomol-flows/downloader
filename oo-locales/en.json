{
  "downloader-is-a-library-for-fast-resumable-multi-file-downloads": "A powerful, user-friendly file download toolkit for OOMOL workflows that makes downloading files from the internet simple and reliable.",
  "downloader": "Downloader",
  "download-files": "Download files",
  "downloads-files-from-urls-with-support-for-multi-threading-retry": "Downloads files from URLs with support for multi-threading, retry mechanisms, and progress tracking",
  "list-of-download-tasks-with-file-paths-urls-headers-and-cookies": "List of download tasks with file paths, URLs, headers, and cookies",
  "action-to-take-when-file-already-exists": "Action to take when file already exists",
  "action-to-take-when-download-fails": "Action to take when download fails",
  "number-of-concurrent-download-threads": "Number of concurrent download threads",
  "download-window-width-for-connection-management": "Download window width for connection management",
  "retry-intervals-in-seconds-for-failed-downloads": "Retry intervals in seconds for failed downloads",
  "minimum-segment-length-in-bytes-for-multi-part-downloads": "Minimum segment length in bytes for multi-part downloads",
  "size-in-bytes-to-fetch-per-request": "Size in bytes to fetch per request",
  "request-timeout-in-seconds": "Request timeout in seconds",
  "number-of-retry-attempts-for-failed-downloads": "Number of retry attempts for failed downloads",
  "sleep-time-in-seconds-between-retry-attempts": "Sleep time in seconds between retry attempts",
  "download-a-file": "Download a file",
  "downloads-a-single-file-from-a-url-with-configurable-retry-mecha": "Downloads a single file from a URL with configurable retry mechanisms and performance settings",
  "url-of-the-file-to-download": "URL of the file to download",
  "path-where-the-downloaded-file-will-be-saved": "Path where the downloaded file will be saved",
  "action-to-take-when-file-already-exists2": "Action to take when file already exists",
  "number-of-concurrent-download-threads2": "Number of concurrent download threads",
  "http-headers-to-send-with-the-request": "HTTP headers to send with the request",
  "http-cookies-to-send-with-the-request": "HTTP cookies to send with the request",
  "download-window-width-for-connection-management2": "Download window width for connection management",
  "retry-intervals-in-seconds-for-failed-downloads2": "Retry intervals in seconds for failed downloads",
  "minimum-segment-length-in-bytes-for-multi-part-downloads2": "Minimum segment length in bytes for multi-part downloads",
  "size-in-bytes-to-fetch-per-request2": "Size in bytes to fetch per request",
  "request-timeout-in-seconds2": "Request timeout in seconds",
  "number-of-retry-attempts-for-failed-downloads2": "Number of retry attempts for failed downloads",
  "sleep-time-in-seconds-between-retry-attempts2": "Sleep time in seconds between retry attempts",
  "download-files-1": "Download files #1",
  "create-a-task-for-the-file": "Create a task for the file",
  "create-a-task-for-the-file2": "Create a task for the file",
  "get-the-first-path": "Get the first path",
  "download-to-a-folder-multi-files": "Download to a folder (multi-files)",
  "downloads-multiple-files-to-a-specified-folder-with-batch-proces": "Downloads multiple files to a specified folder with batch processing and folder management capabilities",
  "list-of-files-to-download-with-their-urls-and-names": "List of files to download with their URLs and names",
  "folder-where-downloaded-files-will-be-saved": "Folder where downloaded files will be saved",
  "action-to-take-when-files-already-exist": "Action to take when files already exist",
  "action-to-take-when-downloads-fail": "Action to take when downloads fail",
  "whether-to-clean-the-target-folder-before-downloading": "Whether to clean the target folder before downloading",
  "number-of-concurrent-download-threads3": "Number of concurrent download threads",
  "download-files-12": "Download files #1",
  "merge-as-tasks": "merge as tasks",
  "pll": "PLL",
  "url-to-file": "URL to file",
  "automatically-downloads-a-file-from-url-with-smart-filename-dete": "Automatically downloads a file from URL with smart filename detection and folder management",
  "url-of-the-file-to-download2": "URL of the file to download",
  "folder-where-the-file-will-be-saved-auto-detect-if-empty": "Folder where the file will be saved (auto-detect if empty)",
  "whether-to-create-the-folder-if-it-doesn-t-exist": "Whether to create the folder if it doesn't exist",
  "custom-filename-prefix-optional": "Custom filename prefix (optional)",
  "action-to-take-when-file-already-exists3": "Action to take when file already exists",
  "convert-to-saved-path": "Convert to saved path",
  "download-a-file-1": "Download a file #1"
}
